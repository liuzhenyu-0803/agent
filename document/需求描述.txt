给我开发一个桌面应用，应用名叫agent，主要功能是可以和大模型聊天，后续可扩展能力成为一个智能体。

功能需求：
-支持配置不同的大模型API Provider（如openrouter和硅基流动）和选择不同的大模型
-支持多个会话管理
-每个会话可支持不限轮次的对话（通过主流的策略处理大模型上下文窗口限制）
-支持设置数据存储位置
-支持流式接收和呈现大模型数据
-会话消息以markdown展示
-后续还可能添加深度思考（思维链）和联网搜索的能力
-后续还可能添加本地文件系统处理能力
-后续还可能添加执行命令行的能力
-后续还可能添加通过mcp访问其它系统数据的能力

非功能需求：
-交互要符合用户习惯
-不需要考虑安全性问题，不需要加密
-注意代码质量，不要有bug，且要求具有可读性、可维护性、可扩展性、可靠性，符合最佳实践
-每个代码文件尽可能的小，不要包含过多的代码

ui设计：
-整个窗口从左到右依次是导航条、会话列表、消息区
-消息区从上到下是消息展示区、消息编辑区
-消息编辑区从上到下是消息编辑框、发送按钮

技术栈：
-Electron + React
-使用electron-store进行本地数据存储（用于保存配置和聊天记录）
-使用其它依赖包时先告诉我原因，由我来决定用不用

步骤：
1、给出设计方案，然后检查方案是否合理，最后保存到本地（该文档是给AI看的，指导AI自动化生成代码）
2、给出具体实现步骤（只罗列具体步骤，不要出现代码），然后检查方案是否合理，最后保存到本地（该文档是给AI看的，指导AI自动化生成代码）
3、根据实现步骤文档进行实现